#Configuration
###########################
run-shell 'source ~/.zshenv'
# use 256 term for pretty colors
set -g default-terminal "screen-256color"

# increase scroll-back history
set-option -g history-limit 5000

#set C-b to C-Space
set-option -g prefix C-Space

#go to last window with C-a C-a
bind-key C-Space last-window

# disable mouse
setw -g mouse off

#Send prefix in case something need it
bind C-p send-prefix

#Easy config tweaking capabilit
bind R source-file ${XDG_CONFIG_HOME}/tmux/tmux.conf \; display "Reloaded!"

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# Rather than constraining window size to the maximum size of any client 
# # connected to the *session*, constrain window size to the maximum size of any 
# # client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on


# increase repeat time for repeatable commands
set -g repeat-time 1000

# start window index at 1
set -g base-index 1

# start pane index at 1
setw -g pane-base-index 1

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
set -g renumber-windows on

# resize to current window size
# setw -g aggressive-resize on

# enable pbcopy and pbpaste
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/blob/master/README.md
#set-option -g default-command "reattach-to-user-namespace -l zsh"
# move x clipboard into tmux paste buffer
#bind p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
bind p run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
#bind y run "tmux save-buffer - | xclip -i"
bind y run "tmux show-buffer | xclip -i -b"

#bind u copy-pipe "cat | bemenu -l 10 | xargs -r vimb-run"

set-window-option -g mode-keys vi
#bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

###########################
#  Key Bindings
###########################

# copy with 'enter' or 'y' and send to mac os clipboard: http://goo.gl/2Bfn8
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# create 'v' alias for selecting text
bind-key -t vi-copy v begin-selection

# paste
# unbind C-p
# bind C-p paste-buffer

#cicly throw windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# window splitting
unbind %
bind | split-window -h
unbind '"'
bind - split-window -v

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# quickly switch panes
unbind ^j
bind ^j select-pane -t :.+
unbind ^k
bind ^k select-pane -t :.-

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like (my) vim
# this is the default in tmux is :
unbind \;
bind \; command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi
###########################
# Status Bar
###########################

# enable UTF-8 support in status bar
set -g status-utf8 on

# set refresh interval for status bar
set -g status-interval 10

# center the status bar
set -g status-justify centre

# show session, window, pane in left status bar
set -g status-left-length 40
set -g status-left '#[fg=green]#S#[fg=blue] #I:#P#[default]'

# show hostname, date, time, and battery in right status bar
set -g status-right-length 100
set-option -g status-right '#[fg=green]#H#[default] %m/%d/%y %I:%M'#\
 #[fg=red]#(battery discharging)#[default]#(battery charging)'  #(info free_mem) 

###########################
# Colors
###########################

# color status bar
set -g status-bg colour235
set -g status-fg white

# highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green

# set color of active pane
set -g pane-border-fg colour235
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg black

set -g message-fg black
set -g message-bg yellow
