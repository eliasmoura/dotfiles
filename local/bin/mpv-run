#!/usr/bin/env sh

ex=dmenu
# shellcheck source=/home/kotto/local/cfg/bemenu/conf
#source "$HOME/local/cfg/dmenu/conf"
switches="--really-quiet --keep-open --pause --force-window=yes --ytdl-raw-options=yes-playlist=" #show the window even if it's just audio
title=""
formats=""
format=""
url=""
prog=dmenu
menuopt="-i -l 20"

# prefix=(--prefix 'â‡’')
num_lines="-l 25"
# colors=(--hb '#ffffff' --ff '#007fce' --tf '#d2691e')
opts="$num_lines -i"

mpv_dir=${XDG_RUNTIME_DIR:-/tmp}/mpv
if ! [ -d "$mpv_dir" ]; then
  mkdir -p "$mpv_dir"
fi

get_formats (){
  youtube-dl --no-playlist --list-formats "$1" 2> /dev/null | awk '!/^\[|^format code/' |
  while read -r format; do printf "%s\n" "$format"; done
}

get_title_duration () {
  case "$1" in
    https://www.youtube.com/playlist?*|https://www.youtube.com/watch*list=*)
  	opt="$opt --no-playlist"
	;;
  esac
  # shellcheck disable=2086
  youtube-dl --get-title --get-duration $opt "$1" |
  while read -r this; do printf '%s' "$this"; done | awk 'duration=$(NF), NF=(NF-1) { print duration,$0}'
}

save_video() {
  opts="$opts -p \"Save video $title ?\""
  save=$(find "$HOME/videos/" -type d | $ex "$opts")
  if [ "$save" ]; then
    ! [ -d "$save" ] && mkdir -p "$save"
    #if [[ $? ]]; then
      #notify-send "File \"${file##*/}\" saved in \"$save\""
    #else
      #notify-send -u critical "Cound'n save file \"$file\"!"
    #fi
  else
    return 0
  fi
}

play (){
  read -r format
  url=$1
  if ! [ -e "$1" ]; then
    ytdl="ytdl://"
    shift
    duration=$1
    shift
    title=$1
    if [ -z "$format" ] || [ "$format" = "no" ]; then
      return 0;
    fi
    ipc_file=$(sed -e 's,|\|(\|)\|\$\|\\\|/\|?\|%\|>\|<\|&\|^\|}\|{,_,' "$title")
    switches="$switches --input-ipc-server=$mpv_dir/$ipc_file"
    if [ "$format" != "yes" ]; then
      switches="$switches --ytdl-format=$format"
    fi
  fi
  notify-send -a mpv "PLAYING" "<span fgcolor='white'>$title</span>\nDuration: <span fgcolor='white'>$duration</span>\t Format:<span fgcolor='white'>$format</span>\nURL: <span fgcolor='white'>$url</span>"
  # shellcheck disable=SC2086
  mpv $switches "$ytdl$url"
  s="$?"
  rm "$mpv_dir/$f"
  if [ $s -ne 0 ]; then
    notify-send -a mpv-fail "STOPED" "<span fgcolor='white'>mpv cound't open: $url</span>"
    return 1
  fi
  #save_video "$s"
  return "$s"
}

menu() {
  prompt=$1

  while pgrep "$prog"; do
    sleep 2
  done
  # set -f disable shell glob expansion
  # shellcheck disable=2086
  $prog $menuopt -p "$prompt"
}

if ! [ -f "$1" ]; then
  case "$1" in
    720)
      format="137+140/248+140/248+251/247+140/247+251/22/43/18/1080p/720p/420p/0/best"
      ;;
    360)
      format="43/18"
      ;;
    *)
      url="$1"
      ;;
  esac

  if ! [ "$url" ]
  then
    url=$(xsel --clipboard)
  fi
  ! [ "$url" ] && return 1
  notify-send -a mpv " " "<span fgcolor='white'>Getting info for $url</span>"
  get_title_duration "$url" |
  while read -r duration title; do
    [ -z "$title" ] && title="$url"

    [ -z "$formats" ] && formats=$(get_formats "$url")
    if [ -z "$formats" ]; then
      prompt="No video format found to: [$duration] \"$title\" (url: $url). Play it anyway?"
      formats=$(printf '%s\n' "yes" "no")
    else
      title=$(printf '%.60s\n' "$title")
      prompt="PLAY: [$duration] $title"
    fi
    # shellcheck disable=2086
    printf "%s\n" "$formats" | menu "$prompt" | awk '{print $1}' | play "$url" "$duration" "$title"
    

    f=${title}
    f=$(sed -e 's//\//|/' "$f")
    f=$(sed -e 's// /_/' "$f")
  done
else
  title="${1##*/}"
  play "$1"
  return 0
fi
exit 0
