#!/usr/bin/env bash

shopt -s nullglob globstar

typeit=0
if [[ $1 == "--type" ]]; then
  typeit=1
  shift
fi

if [[ -n $WAYLAND_DISPLAY ]]; then
  dmenu="dmenu-wl"
  xdotool="ydotool type --file -"
elif [[ -n $DISPLAY ]]; then
  dmenu=dmenu
  xdotool="xdotool type --clearmodifiers --file -"
else
  echo "Error: No Wayland or X11 display detected" >&2
  dmenu=dmenu
  # exit 1
fi

prefix=${PASSWORD_STORE_DIR-~/.password-store}
password_files=( "$prefix"/**/*.gpg )
password_files=( "${password_files[@]#"$prefix"/}" )
password_files=( "${password_files[@]%.gpg}" )

password=$(printf '%s\n' "${password_files[@]}" | $dmenu "$@")

[[ -n $password ]] || exit

#NOTE: It seems like pinentry-curses only allow one instance of its process at a time.
# wait until there is none running before proceeding.
while [ $(pgrep pinentry-curses) ]; do
  cat <<EOF
Waiting for pinentry-curses to be available.
Makesure you don't have any pinentry-curses process running.
EOF
  sleep 1
done

if [[ $typeit -eq 0 ]]; then
  pass show -c "$password" 2>/dev/null
else
  #NOTE: Make sure pass/pinentry-curses is executed before leaving the program.
    pass show "$password" |{ IFS= read -r passwd; printf '%s' "$passwd"; }| $xdotool&
fi
